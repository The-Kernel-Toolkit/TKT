name: Build Ubuntu kernel
on:
  workflow_call:
    inputs:
      _cpusched:
        required: true
        type: string
      compiler:
        required: true
        type: string

env:
  _processor_opt: "x86-64"
  _distro: "Ubuntu"
  _git_mirror: "gregkh"
  _logging_use_script: "no"
  _install_after_building: "no"
  _debugdisable: "true"
  _noccache: "true"
  _STRIP: "true"
  _kernel_on_diet: "true"
  _nofallback: "false"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      compiler: ${{ inputs.compiler }}

    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies and cleanup
        run: |
          # Ensure all repo types are enabled
          sudo sed -i 's/^# deb/deb/g' /etc/apt/sources.list
          for file in /etc/apt/sources.list.d/*.list; do
            sudo sed -i 's/^# deb/deb/g' "$file" || true
          done

          # Add all default Ubuntu repositories
          sudo add-apt-repository main
          sudo add-apt-repository universe
          sudo add-apt-repository multiverse
          sudo add-apt-repository restricted
          echo "deb [trusted=yes] http://mirror.mit.edu/ubuntu plucky main universe multiverse restricted" | sudo tee /etc/apt/sources.list.d/plucky.list
          sudo apt update
          sudo apt install -y curl git
          sudo rm -rf /var/cache/apt/archives/*

      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Adjust compiler and compile Kernel
        env:
          _cpusched: ${{ inputs._cpusched }}
          compiler: ${{ inputs.compiler }}
          CC: x86_64-pc-linux-gnu
        run: |
          git config --global --add safe.directory "$(pwd)"
          if [ "${{ inputs.compiler }}" = "llvm" ] || [ "${{ inputs.compiler }}" = "clang" ]; then
            export KCFLAGS="$KCFLAGS -Wold-style-declaration"
          fi
          sed -i 's/^_distro=".*"/_distro="Ubuntu"/' customization.cfg
          sed -i 's/^_compiler=".*"/_compiler="${{ inputs.compiler }}"/' customization.cfg
          set +o pipefail
          yes '' | ./install.sh install || true
          set -o pipefail

      - name: Cleanup useless DEB files
        run: rm -rf DEBS/*dbg*.deb DEBS/*libc-dev*.deb

      - name: Package DEB files
        run: |
          tar czf Ubuntu-linux-diet-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz */*.deb

      - uses: actions/upload-artifact@v4
        with:
          name: ubuntu-kernel-packages-${{ env._cpusched }}-${{ inputs.compiler }}
          path: Ubuntu-linux-*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: ${{ github.ref_name }}
          name: "Ubuntu Kernel Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: Ubuntu-linux-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
