name: Build Debian kernel
on:
  workflow_call:
    inputs:
      _cpusched:
        required: true
        type: string
      compiler:
        required: true
        type: string

env:
  _processor_opt: "x86-64"
  _distro: "Debian"
  _git_mirror: "gregkh"
  _logging_use_script: "no"
  _install_after_building: "no"
  _debugdisable: "true"
  _noccache: "true"
  _STRIP: "true"
  _kernel_on_diet: "true"
  _nofallback: "false"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      compiler: ${{ inputs.compiler }}
    runs-on: ubuntu-latest
    container: debian:sid

    steps:
      - name: Install dependencies and cleanup
        run: |
          rm -rf /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian bookworm contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian bookworm-updates contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian bookworm-backports main contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian bookworm-backports-sloppy main contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian bookworm-proposed-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          echo "deb http://ftp.us.debian.org/debian sid main contrib non-free non-free-firmware" >> /etc/apt/sources.list.d/debian.list
          apt update
          apt-mark unhold libudev1 libudev-dev
          apt upgrade -y
          apt install -y --allow-downgrades curl git gnupg
          apt clean

      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Adjust compiler and compile Kernel
        env:
          _cpusched: ${{ inputs._cpusched }}
          compiler: ${{ inputs.compiler }}
          CC: x86_64-pc-linux-gnu
        shell: bash
        run: |
          git config --global --add safe.directory "$(pwd)"
          if [ "${{ inputs.compiler }}" = "llvm" ] || [ "${{ inputs.compiler }}" = "clang" ]; then
            export KCFLAGS="$KCFLAGS -Wold-style-declaration"
          fi
          sed -i 's/^_distro=".*"/_distro="Debian"/' customization.cfg
          sed -i 's/^_compiler=".*"/_compiler="${{ inputs.compiler }}"/' customization.cfg
          set +o pipefail
          yes '' | ./install.sh install || true
          set -o pipefail

      - name: Cleanup useless DEB files
        run: rm -rf DEBS/*dbg*.deb DEBS/*libc-dev*.deb

      - name: Package DEB files
        run: |
          tar czf Debian-linux-diet-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz */*.deb

      - uses: actions/upload-artifact@v4
        with:
          name: debian-kernel-packages-${{ env._cpusched }}-${{ inputs.compiler }}
          path: Debian-linux-*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: ${{ github.ref_name }}
          name: "Debian Kernel Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: Debian-linux-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
